<?xml version="1.0" encoding="UTF-8"?>
<!-- This web.xml file is not required when using Servlet 3.0 container,
     see implementation details http://jersey.java.net/nonav/documentation/latest/jax-rs.html -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <filter>
    <filter-name>ContentCorsFilter</filter-name>
    <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
    <init-param>
      <param-name>cors.allowed.origins</param-name>
      <param-value>http://vagrant.ptcnet.ptc.com:2280</param-value>
    </init-param>
    <init-param>
      <param-name>cors.support.credentials</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.methods</param-name>
      <param-value>GET,POST,OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.headers</param-name>
      <param-value>Content-Type,X-Requested-With</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>ContentHttpHeaderSecurityFilter</filter-name>
    <filter-class>org.apache.catalina.filters.HttpHeaderSecurityFilter</filter-class>
    <init-param>
      <param-name>antiClickJackingOption</param-name>
      <param-value>ALLOW-FROM</param-value>
    </init-param>
    <init-param>
      <param-name>antiClickJackingUri</param-name>
      <param-value>http://vagrant.ptcnet.ptc.com:2280</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>ContentCorsFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
    <url-pattern>/servlet/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentHttpHeaderSecurityFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
    <url-pattern>/servlet/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>Jersey Web Application</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>com.ptc.fileserver</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>jersey.config.server.provider.classnames</param-name>
      <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Jersey Web Application</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>doDownload</display-name>
    <servlet-name>doDownload</servlet-name>
    <servlet-class>wt.fv.replica.StandardReplicaService</servlet-class>
  </servlet>
  <servlet>
    <description></description>
    <display-name>doUploadToCache_Replica</display-name>
    <servlet-name>doUploadToCache_Replica</servlet-name>
    <servlet-class>wt.fv.uploadtocache.DoUploadToCache_Server</servlet-class>
  </servlet>
  <servlet>
    <description></description>
    <display-name>HTTPServer</display-name>
    <servlet-name>HTTPServer</servlet-name>
    <servlet-class>wt.httpgw.HTTPServer</servlet-class>
  </servlet>
  <servlet>
    <description></description>
    <display-name>PullStreamFromReplica</display-name>
    <servlet-name>PullStreamFromReplica</servlet-name>
    <servlet-class>wt.fv.replica.PullStreamFromReplica</servlet-class>
  </servlet>
  <servlet>
    <description></description>
    <display-name>TestServlet</display-name>
    <servlet-name>TestServlet</servlet-name>
    <servlet-class>wt.fv.replica.TestServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>doDownload</servlet-name>
    <url-pattern>/wt.fv.replica.StandardReplicaService/doDownload/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>doUploadToCache_Replica</servlet-name>
    <url-pattern>/wt.fv.uploadtocache.DoUploadToCache_Server/doUploadToCache_Replica</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>HTTPServer</servlet-name>
    <url-pattern>/wt.httpgw.HTTPServer/ping</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>PullStreamFromReplica</servlet-name>
    <url-pattern>/wt.fv.replica.PullStreamFromReplica/findStream</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>TestServlet</servlet-name>
    <url-pattern>/wt.fv.replica.TestServlet</url-pattern>
  </servlet-mapping>
</web-app>